@model KPaTS.Models.TestModel

@{
    ViewBag.Title = "Создание теста";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<div class="mdl-grid">
<section class="mdl-color--white mdl-cell mdl-cell--4-col card-padding mdl-cell--top">
    <h5>Test data</h5>
    <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
        @Html.LabelFor(model => model.Name, new { @class = "mdl-textfield__label"})
        @Html.TextBoxFor(model => model.Name, new { @class = "mdl-textfield__input" })
        @Html.ValidationMessageFor(model => model.Name)
    </div>
    <br />
    <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
        @Html.LabelFor(model => model.Description, new { @class = "mdl-textfield__label"})
        @Html.TextBoxFor(model => model.Description, new { @class = "mdl-textfield__input" })
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <br />
    <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
        @Html.LabelFor(model => model.Shortcut, new { @class = "mdl-textfield__label"})
        @Html.TextBoxFor(model => model.Shortcut, new { @class = "mdl-textfield__input" })
        @Html.ValidationMessageFor(model => model.Shortcut)
    </div>

    <h6>@Html.LabelFor(model => model.Space)</h6>
    <div class="editor-field">
        @Html.DropDownList("Space[Id]", KPaTS.Core.ViewHelper.GetSpacesList())
    </div>
    <div id="subject" style="display: none">
        <h6>@Html.LabelFor(model => model.Subject)</h6>
        @Html.DropDownList("Subject[Id]", new SelectList(new List<SelectListItem>()))
    </div>
    <button type="submit" class="right-fab mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored">
        <i class="material-icons">add</i>
    </button>
</section>
<section class="mdl-color--white mdl-cell mdl-cell--8-col card-padding">
    <h5>@Html.LabelFor(model => model.Questions)</h5>
    <div class ="questions mdl-grid"></div>
    @Html.DropDownList("QuestionType",EnumHelper.GetSelectList(typeof(KPaTS.Models.QuestionType)))
    <input class="mdl-button mdl-js-button mdl-js-ripple-effect"type ="button" value="Add question" onClick="addQuestion()"/>
</section>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var currentQuestions = 0;

        function addQuestion() {
            $.get("/Test/GetQuestionView", { number: currentQuestions++, type: $("#QuestionType option:selected").val() }, function (data) {
                $(".questions").append(data);
                componentHandler.upgradeAllRegistered();
            })
        }

        function addAnswer(num, type) {
            $.get("/Test/GetAnswerView", { number: num, type: type, count: $("#answers" + num).children().size() }, function (data) {
                $("#answers" + num).append(data);
                componentHandler.upgradeAllRegistered();
            })
        }

        $(document).ready(function () {
            $("#Space_Id_").on("change", function (data) {
                $.get("/Api/GetSpaceSubjects", { id: $("#Space_Id_ option:selected").val() }, function (data) {
                    $.each(data, function (i, item) {
                        $('#Subject_Id_').append($('<option>', {
                            value: item.Id,
                            text: item.Shortcut
                        }));
                    });
                    $('#subject').show();
                })
            });

            $("#Shortcut").on("change", function (data) {
                $.get("/Api/CheckTestShortcut", { shortcut: $("#Shortcut").val() }, function (data) {
                    if (data.result == 0)
                        $("#Shortcut").css("background-color", "red");
                    else
                        $("#Shortcut").css("background-color", "white");
                })
            });
        });
</script>
}
